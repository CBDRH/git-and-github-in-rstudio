{
  "hash": "f902c278d2b21fcc033d2923e44fae23",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"\"\n---\n\n\n\n![](../images/horst/git-hug.png)\n\n::: {.figLab}\n[Artwork by @allison_horst](https://twitter.com/allison_horst)\n:::\n\nThank you for enrolling in the <span style=\"display: inline-flex; align-items: center;\">\n  <img src=\"../images/hot-air-balloon.png\" style=\"height: 1em; vertical-align: middle;\">\n</span> **Reproducible Data Visualisation with R workshop** <span style=\"display: inline-flex; align-items: center;\">\n  <img src=\"../images/hot-air-balloon.png\" style=\"height: 1em; vertical-align: middle;\">\n</span> \n\nTo get the most out of the workshop, please run through the checklist below and make sure you have all the necessary software installed in advance. If you are already working with git in RStudio you may be ready to go already. If you are just getting started, keep in mind that these configuration steps can be half the battle. Don't worry if you get stuck, we are here to help. \n\n<hr>\n<br>\n\n::: {.callout-tip}\n\n## A note on the key reference\n\nConfiguring Git, GitHub and RStudio to work together is half the battle when it comes to using Git in RStudio. \n\nLuckily there is an excellent online reference for this: **Happy Git and GitHub for the useR** by Jennifer Bryan. The chapters linked below refer to key sections in this book.\n\nWe won't have time to configure everybody's laptop at the workshop so please try to work through these steps in advance! The best strategy is to carefully read the recommended sections in order and follow the directions diligently. But there is a lot of detail to work through so don't worry if you get stuck---reach out for help!  \n\n:::\n\n<br>\n<hr>\n\n**Checklist:**\n\n_Can you tick every item below?_\n\n* A laptop (and a charger!) <input type=\"checkbox\"/>\n\n* At least a basic working knowledge of R and RStudio. If you are a beginner or want a refresh, check out the one-hour webinar [A gengle introduction to tidy statistics in R](https://posit.co/resources/videos/a-gentle-introduction-to-tidy-statistics-in-r/){target=\"_blank\"}) <input type=\"checkbox\"/>\n\n* A free GitHub user account. See [Ch 4. Register a GitHub account](https://happygitwithr.com/github-acct#github-acct) <input type=\"checkbox\"/>\n\n* A recent version of R (at least v4.3.0) and RStudio (at least a 2024 version) installed on your laptop. See [Ch 5. Install or upgrade R and RStudio](https://happygitwithr.com/install-r-rstudio){target=\"_blank\"} <input type=\"checkbox\"/>\n\n* Git installed on your laptop. See [Ch 6. Install Git](https://happygitwithr.com/install-git){target=\"_blank\"} <input type=\"checkbox\"/>\n\n* Set up a Personal Access Token (PAT) to allow RStudio to communicate with GitHub. See **Ch 9. Personal access token for HTTPS** and in particular [Section 9.1 TL;DR](https://happygitwithr.com/https-pat#tldr) <input type=\"checkbox\"/>\n\n<hr>\n<br>\n\n::: {.callout-warning}\n\n## Setting up a Personal Access Token\n\nFollow [Section 9.1 TL;DR](https://happygitwithr.com/https-pat#tldr) from Happy Git and GitHub for the useR to set up your Personal Access Token. The easiest way to do this is to run the suggested commands from R. To run these commands you may need to install the `usethis` and `gitcreds` packages if they are not installed already. If you get an error message indicating that you don't have the packages installed you can install them by entering the commands below at the console. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"usethis\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"gitcreds\")\n```\n:::\n\n\n\nAs per **Section 9.1 TL;DR**, the following R commands can be used to set up a Personal Access Token from RStudio. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::create_github_token()\n```\n:::\n\n\n\n* Entering a note to describe the tokens use case is useful for identifying and managing tokens. Choose a note that describes your use case, e.g. **RStudio projects**.\n\n* Set the expiration to 30 days. You can always extend this.\n\n* The GitHub PAT scope is like a set of permissions that define what actions the token can perform on your behalf on GitHub. You can use the default scopes of **workflow**, **gist**, and **user**. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngitcreds::gitcreds_set()\n```\n:::\n\n\n\n:::\n\n<br>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}