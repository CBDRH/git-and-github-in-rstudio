{
  "hash": "8c8ef25b68f3b7a3d558b37a644312c4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Orientation to RStudio\nformat: \n  closeread-html:\n    css: ../custom.scss\n    code-overflow: wrap\n---\n\n\n:::: {.cr-section layout=\"sidebar-right\" style=\"font-size:30px;\"}\n\nWe're going to spend two days working on R code so let's take a moment to open up RStudio to orientate ourselves. @cr-blank\n\nHere is a snapshot of the RStudio environment.  @cr-myimage\n\nThere's a lot going on! \n\nLet's break it down.\n\nThis is an R script file (`.R` extension). Here you can write R code to clean, analyse, and visualise data [@cr-myimage]{pan-to=\"30%, 20%\" scale-by=\"1.5\"}\n\nNotice that this file is saved with a proper file name `analysis.R` so we can open and close the file and come back to the code as needed. [@cr-myimage]{pan-to=\"60%, 80%\" scale-by=\"2\"}\n\nThis area has several tabs. The **Environment** tab plays a key role in managing and visualizing the objects that exist in the current R session. [@cr-myimage]{pan-to=\"-30%, 40%\" scale-by=\"1.5\"}\n\nVarious types of objects can exist in your environment, for example vectors, dataframes and lists.\n\nCurrently we can see the `cars` dataset and the `meanSpeed` value stored in the environment.\n\nNotice the **Git** tab is also in this area. We'll use that later.\n\n\nThere are several important tabs in the bottom right-hand corner [@cr-myimage]{pan-to=\"-30%, -40%\" scale-by=\"1.5\"}\n\nThe **Files** tab shows us all the file in our project. Spot `analsis.R`!\n\nFrom here we can open files or navigate to different folders. \n\nOther important tabs in this area includes the **Plots** tab, where are plots will appear, and the **Packages** tab that has a list of all the installed packages.\n\nHere we have the console. [@cr-myimage]{pan-to=\"30%, -40%\" scale-by=\"1.5\"}\n\nThe console allows you to run R commands interactively. You can type a command directly into the console and press Enter to execute it and view the results straight away. \n\nThe console keeps track of previously executed commands. You can use the {{< fa arrow-up >}} up and {{< fa arrow-down >}} down arrow keys to scroll through past commands, making it easy to re-run commands or modify and execute them again.\n\nWorking in the console is convenient for quick, interactive commands, but it doesn't save a persistent record of your entered commands so important code should always be saved in a script.\n\nFinally, note this icon in the top right-hand corner. This tells us we are working in an R Project named `cars-study`. [@cr-myimage]{pan-to=\"-80%, 80%\" scale-by=\"1.5\"}\n\n:::{#cr-blank}\n\n:::\n\n:::{#cr-myimage}\n![](../images/rstudio-blank.png)\n:::\n\n::::\n\n::: {.callout-tip icon=false}\n\n## {{< fa rocket >}} Mini Exercise\n\n::: {.clock}\n\n{{< fa clock >}} 5 minutes\n\n:::\n\n#### Make yourself at home!\n\n1. Enter `getwd()` at the console to see your current working directory. Make a note of this location.\n\n2. In the RStudio menu navigate to `Tools > Global Options > Appearance` and choose an editor theme that you like!\n\n\n:::\n\n\n\n## R Projects\n\n>Use R projects to keep all your code organised in a single space\n\n![](../images/horst/rproject-skater.png)\n\n::: {.figLab}\n\n[Artwork by @allison_horst](https://twitter.com/allison_horst)\n\n:::\n\n\n## Relative paths \n\n> If the first line of your R script is\n>\n> `setwd(\"C:\\Users\\jenny\\path\\that\\only\\I\\have\")`\n>\n> I will come into your office and SET YOUR COMPUTER ON FIRE ðŸ”¥.\n\n::: {.figLab}\n\n---Jenny Bryan in [Project-oriented workflow](https://www.tidyverse.org/blog/2017/12/workflow-vs-script/)\n\n:::\n\nA huge advantage of working in project environments is that we can use _relative_ paths instead of **absolute** paths.\n\n::: {.callout-tip }\n\nIt is bad practice to include absolute paths like `C:\\Users\\jenny\\path\\that\\only\\I\\have` in your code\n\n::: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/Users/z3509778/Library/CloudStorage/OneDrive-UNSW/Data Vis Workshop/CourseSite/lectures\"\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}