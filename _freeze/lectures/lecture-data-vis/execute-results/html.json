{
  "hash": "8a61647e9f60b26ca7e5e2f2c63594f2",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: \n  revealjs:\n    theme: [night, ../custom.scss]\n    highlight-style: monokai\n    code-overflow: wrap\nfooter: '<a href=\"/lectures/overview.qmd\">{{< fa house >}}</a>'\nslide-number: c/t\n---\n\n\n## Data visualisation with `ggplot2` {.title-slide}\n\n<img src=\"../images/ggplot2.png\"></img>\n\n## {.center-slide}\n\n![](../images/from-data-to-vis.png)\n\n## {.center-slide}\n\n![](../images/horst/ggplot2-data-masterpiece.png)\n\n::: {.figLab}\n[Artwork by @allison_horst](https://twitter.com/allison_horst)\n:::\n\n## `ggplot2`\n\n:::: {.columns}\n\n::: {.column .incremental width=60%}\n\n* A grammar of graphics\n\n* Consistent syntax \n\n* Flexible\n\n* Customisable\n\n* [ggplot2.tidyverse.org](https://ggplot2.tidyverse.org/)\n\n* [exts.ggplot2.tidyverse.org/gallery](https://exts.ggplot2.tidyverse.org/gallery/)\n\n\n:::\n\n\n::: {.column width=40%}\n![](../images/ggplot2.png)\n:::\n\n::::\n\n\n## Components of `ggplot()` function \n\n::: {.incremental}\n\n* Data (`data = `)\n\n* Coordinate system (`x` and `y`)\n \n* Aesthetics (`aes()`)\n\n* Geometries (`geom_*`)\n\n:::\n\n## `ggplot2` components: Data {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins\n)\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n## `ggplot2` components: Coordinates {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins,\n  aes(x = body_mass_g)\n)\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n## `ggplot2` components: Geom {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins,\n  aes(x = body_mass_g)) + \n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## `ggplot2` components: Static Aesthetics {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins,\n  aes(x = body_mass_g)) + \n  geom_histogram(\n    color = 'navy',\n    fill = 'lightblue'\n  )\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n## `ggplot2` components: Mapped Aesthetics {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-11|8|10-11\"}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins,\n  aes(x = body_mass_g, fill = ..x..)) + \n  geom_histogram() +\n  scale_fill_gradient(low = 'lightblue', \n                      high = 'navy')\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n\n## Two numeric variables\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-6|6\"}\n# Plot\nggplot(\n  data = penguins,\n  aes(x = flipper_length_mm, \n      y = bill_length_mm)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n## One numeric, One categorical\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-6|6\"}\n# Plot\nggplot(\n  data = penguins,\n  aes(x = island, \n      y = body_mass_g)) + \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n## More elaborate combinations {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(palmerpenguins)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(colorspace)\nlibrary(ggtext)\n\nmyCols <- brewer.pal(3, 'Set2')\n\nggplot(data=penguins,\n       aes(x = body_mass_g, \n           y = flipper_length_mm,\n           color = species,\n           fill = species)) +\n  geom_point(shape = 21, size = 3) +\n  geom_smooth(method=\"lm\", size=3) +\n  scale_color_manual(\"\", values = myCols) +\n  scale_fill_manual(\"\", values = lighten(myCols, 0.5)) +\n  scale_x_continuous(labels = scales::comma) +\n  labs(y = \"Flipper length (mm)\",\n       x = \"Body mass (g)\",\n       title = \"<span style='color: #8DA0CB'>**Gentoo**</span> penguins are larger and heavier than \n       <span style='color: #66C2A5'>**Adelie**</span> or\n       <span style='color: #FC8D62'>**Chinstrap**</span>\",\n       subtitle = \"**Penguin body mass (g) versus flipper length (mm) by species**\",\n       caption = \"**Data** from the Palmer Penguins dataset\") +\n  theme_minimal() +\n  theme(\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(color='grey10', size=24),\n    plot.subtitle = element_markdown(color='grey60', size=16,\n                                 margin = margin(5,0,10,0)),\n    plot.caption = element_markdown(color = \"grey60\",\n                                size=10, hjust=0),\n    axis.title = element_text(color='grey10', size=16),\n    axis.text = element_text(color='grey10', size=14)\n  )\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## `ggplot2` A note on style {.smaller}\n\n\n:::: {.columns}\n\n::: {.column}\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins,\n  aes(x = body_mass_g)) + \n  geom_histogram(\n    color = 'navy',\n    fill = 'lightblue')\n```\n:::\n\n:::\n\n::: {.column .incremental}\n\n* `library()` calls on top\n* Plenty of `# Comments`\n* Spacing `x = body_mass_g`\n* Indentation\n* `data = ` and (`aes()`) on separate lines\n* Geoms on new lines\n* `color` and `fill` on new lines\n\n:::\n\n::::\n\n. . . \n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=penguins,aes(x=body_mass_g))+geom_histogram(color='navy',fill='lightblue')\n```\n:::\n\n\nDoes the same but harder to read and debug!\n\n## Mini-Exercise {.smaller} \n\n::: {.clock}\n\n{{< fa clock >}} 5 minutes\n\n:::\n\n### Modify the starter code to produce the figure\n\n:::: {.columns}\n\n::: {.column width=34%}\n\n<iframe style=\"width:100%;max-width:360px;height:360px;\" src=\"https://stopwatch-app.com/widget/timer?theme=dark&color=yellow&hrs=0&min=5&sec=0\" frameborder=\"0\"></iframe>\n  \n:::\n\n::: {.column width=66%}\n\n::: {.panel-tabset}\n\n### Figure\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n### Starter code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins,\n  aes(x = body_mass_g)) + \n  geom_histogram(\n    color = 'navy',\n    fill = 'lightblue'\n  )\n```\n:::\n\n\n### Hints\n\n* This is a _density_ plot\n* Enter `?geom_density()` at the console to open the R Documentation. Scroll down to the section on **Aesthetics** to read about other modifiable aesthetics.\n\n:::\n:::\n::::\n\n\n\n# Adding aesthetic mappings\n\n\n## Aesthetic mappings\n\nMap variables to visual elements\n\n::: {.incremental}\n\n* Colour\n* Fill\n* Shape\n* Size\n* Line type\n\n:::\n\n## Map colour to body mass\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-8|7\"}\n# Scatterplot\nggplot(\n  data = penguins,\n  aes(\n    x = body_mass_g, \n    y = flipper_length_mm,\n    color = body_mass_g)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n## Map size to body mass\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-8|7\"}\n# Scatterplot\nggplot(\n  data = penguins,\n  aes(\n    x = body_mass_g, \n    y = flipper_length_mm,\n    size = body_mass_g)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## Map colour to species\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-8|7\"}\n# Scatterplot\nggplot(\n  data = penguins,\n  aes(\n    x = body_mass_g, \n    y = flipper_length_mm,\n    color = species)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n\n## Map species to colour and shape\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-9|7-8\"}\n# Scatterplot\nggplot(\n  data = penguins,\n  aes(\n    x = body_mass_g, \n    y = flipper_length_mm,\n    color = species,\n    shape = species)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n## Mini-Exercise {.smaller}\n\n::: {.clock}\n\n{{< fa clock >}} 5 minutes\n\n:::\n\n### Modify the starter code to produce the figure!\n\n:::: {.columns}\n\n::: {.column width=34%}\n\n<iframe style=\"width:100%;max-width:360px;height:360px;\" src=\"https://stopwatch-app.com/widget/timer?theme=dark&color=yellow&hrs=0&min=5&sec=0\" frameborder=\"0\"></iframe>\n  \n:::\n\n::: {.column width=66%}\n\n::: {.panel-tabset}\n\n### Figure\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n### Starter code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot\nggplot(\n  data = penguins,\n  aes(x = island, \n      y = body_mass_g)) + \n  geom_boxplot()\n```\n:::\n\n\n:::\n\n:::\n\n::::\n\n\n\n# Building more complex plots\n\n## Base plot {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(data=penguins,\n       aes(x = body_mass_g, \n           y = flipper_length_mm,\n           color = species,\n           fill = species)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n\n## Layering geoms {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-7|7\"}\nggplot(data=penguins,\n       aes(x = body_mass_g, \n           y = flipper_length_mm,\n           color = species,\n           fill = species)) +\n  geom_point() +\n  geom_smooth(method = 'lm')\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n\n## Add color scale {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-10|1|10\"}\nmyCols <- c(\"skyblue\", \"orange\", \"forestgreen\")\n\nggplot(data=penguins,\n       aes(x = body_mass_g, \n           y = flipper_length_mm,\n           color = species,\n           fill = species)) +\n  geom_point() +\n  geom_smooth(method = 'lm') + \n  scale_color_manual(values = myCols)\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n## Add fill scale {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-11|11\"}\nmyCols <- c(\"skyblue\", \"orange\", \"forestgreen\")\n\nggplot(data=penguins,\n       aes(x = body_mass_g, \n           y = flipper_length_mm,\n           color = species,\n           fill = species)) +\n  geom_point() +\n  geom_smooth(method = 'lm') + \n  scale_color_manual(values = myCols) +\n  scale_fill_manual(values = myCols)\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n## Vary static aesthetics {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-11|8,9\"}\nmyCols <- c(\"skyblue\", \"orange\", \"forestgreen\")\n\nggplot(data=penguins,\n       aes(x = body_mass_g, \n           y = flipper_length_mm,\n           color = species,\n           fill = species)) +\n  geom_point(size = 2) +\n  geom_smooth(method = 'lm', size = 2) + \n  scale_color_manual(values = myCols) +\n  scale_fill_manual(values = myCols)\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n\n## Add x and y scales {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-13|12-13\"}\nmyCols <- c(\"skyblue\", \"orange\", \"forestgreen\")\n\nggplot(data=penguins,\n       aes(x = body_mass_g, \n           y = flipper_length_mm,\n           color = species,\n           fill = species)) +\n  geom_point(size = 2) +\n  geom_smooth(method = 'lm', size = 2) + \n  scale_color_manual(values = myCols) +\n  scale_fill_manual(values = myCols) +\n  scale_x_continuous(\"Body mass (g)\") +\n  scale_y_continuous(\"Flipper length (mm)\")\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n\n## Mini-Exercise {.smaller}\n\n::: {.clock}\n\n{{< fa clock >}} 15 minutes\n\n:::\n\n### Use `ggplot2` and the `penguins` data to produce the figure\n\n:::: {.columns}\n\n::: {.column width=34%}\n\n<iframe style=\"width:100%;max-width:360px;height:360px;\" src=\"https://stopwatch-app.com/widget/timer?theme=dark&color=yellow&hrs=0&min=15&sec=0\" frameborder=\"0\"></iframe>\n  \n:::\n\n::: {.column width=66%}\n\n::: {.panel-tabset}\n\n### Figure\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n### Hints\n\n::: {.smaller}\n\n* Start by identifying the `x`, `y` and `fill` aesthetics that will go in to `aes()`.\n* This plot combines `geom_jitter()` and `geom_boxplot()`\n* Setting the `alpha =` argument makes the boxplots transparent\n* Use `scale_fill_manual()` to control the fill colors for the three different species\n\n:::\n\n### {{< fa skull-crossbones >}} Seriously, help\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fill in the blanks!\nggplot(\n  data = ,\n  aes(x = ,\n      y = ,\n      fill = )) +\n  geom_jitter(shape = ) +\n  geom_boxplot(\n    alpha = ) + \n  scale_y_continuous(\n    \" \",\n    limits = c( ,  )) + \n  scale_x_discrete(NULL) + \n  scale_fill_manual(NULL,\n    values = c(' ',' ',' '))\n```\n:::\n\n\n:::\n:::\n::::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}